function DinDoutMTT23_JAM(D1, D2, nsteps, param_opt, Nb_STK)
% plot Dout versus Din
% AS 5/10/2020

cd('/Users/serge/Documents/labo/articles/JAM nanodyn/videos/raw')
% cd('/Users/serge/Documents/labo/meetings/labmeetings/2013-05-24 sjt')

clear global Nb_STK tab_num

param_opt = 0;

if nargin<1 % full test
    quick_test = 0;
    D1 = 1e-5; D2 = 10; nsteps = 28; Nb_STK = 90;
elseif (nargin==1) && (D1==1)
        quick_test = 1;
        D1 = 1e-3; D2 = 0.5; nsteps = 9; Nb_STK = 30; 
end

p = MTTparams_def(param_opt);
filename_def = p{1};

files = dir(filename_def);
if quick_test, Nfiles = 1; else, Nfiles = length(files); end

output_dir = 'output23_DinDout'; % output is erased at each D value

step = (log(D2)-log(D1))/(nsteps-1);
Din = exp(log(D1):step:log(D2)); % valeurs d'entrée, en pxl/frame
Din2 = (Din(1:end-1)+Din(2:end))/2;
Doptim = zeros(Nfiles,1);
Dout = cell(Nfiles,1);
dDout = Dout;

for nf = 1:Nfiles
    filename = files(nf).name;
    filename_filt = [filename(1:end-4) '_filt1.tif'];
    if ~isempty(dir(filename_filt)), filename = filename_filt; end
    Dout{nf} = zeros(size(Din));
    r2 = Dout{nf}; dr2 = Dout{nf};
    
    figure('WindowStyle','docked')
    
    for i = 1:length(Din)
        p = MTTparams_def(param_opt);
        Ddef = eval(p{8});
        
        p{1} = filename;
        p{2} = '1'; % refit
        p{4} = output_dir;
        
        p{8} = num2str(Din(i));
        
        p{10} = num2str(Nb_STK);
        
        p{20} = ''; % conf method
        
        MTT23i(p)
        tab_param = fread_all_params([output_dir filesep filename '_tab_param.dat']); % % %         tab_param = importdata([output_dir filesep filename '_tab_param.mat']);
        
        if ~isempty(tab_param)
            r2_tab = calcul_r2(tab_param);
            r2(i) = exp(mean(log(r2_tab(r2_tab>0))));
            dr2(i) = exp(std(log(r2_tab(r2_tab>0))));
        end
        
        clf
        subplot(211)
        title({cd filename 'D_in D_out'},'interpreter','none')
        Dout{nf} = r2/4;
        dDout{nf} = Dout{nf}.*dr2;
        loglog(Din,Dout{nf},'.-',Din,dDout{nf},'^','MarkerSize',8)
        hold on
        a = axis;
        loglog([Ddef Ddef], a(3:4), ':')
        xlabel('D_{in} (pxl^2/frame)'); ylabel('D_{out} (pxl^2/frame)')
        
        subplot(212)
        deltaD = diff(log10(Dout{nf})); % deltaD = 10.^diff(log10(Dout));
        loglog(Din2, deltaD, '.-')
        xlabel('D_{in} (pxl^2/frame)'); ylabel('slope: delta D_{out} (pxl^2/frame)');
        hold on
        if i>1
            %             axis tight
            a = axis;
            axis([Din(1) Din(end) a(3:4)])
            loglog([Ddef Ddef], a(3:4), 'r:')
        end
        pause(.1)
    end % D
    
    lDin2 = log10(Din2);
    w = max(log10(deltaD))-log10(deltaD); % weight for ponderated mean
    Doptim(nf) = 10^(sum(lDin2.*w)/sum(w)); % optim = find(deltaD==min(deltaD),1);
    
    subplot(212), hold on
    loglog([Doptim(nf) Doptim(nf)], a(3:4), 'g:')
    subplot(211), hold on
    str = sprintf('Optimum: D_{in}=%3.2g pxl^2/frame',Doptim(nf));
    text(.1,.9,str,'Units','normalized')
    a = axis;
    loglog([Doptim(nf) Doptim(nf)], a(3:4), 'g:')
    
    savefile = ['DinDout_' filename(1:end-4)];
    cd(output_dir)
    saveas(gcf, savefile, 'fig')
    saveas(gcf, savefile, 'png')
    cd ..
end % files

clf
subplot(211)
title({cd 'D_in D_out all files'},'interpreter','none')

loglog(Din,cell2mat(Dout),'.-',Din,cell2mat(dDout),'^','MarkerSize',8)
hold on
a = axis;
loglog([Ddef Ddef], a(3:4), ':')
xlabel('D_{in} (pxl^2/frame)'); ylabel('D_{out} (pxl^2/frame)')

subplot(212)
deltaD = diff(log10(cell2mat(Dout))); % deltaD = 10.^diff(log10(Dout));
loglog(Din2, deltaD, '.-')
xlabel('D_{in} (pxl^2/frame)'); ylabel('slope: delta D_{out} (pxl^2/frame)');
hold on
a = axis;
axis([Din(1) Din(end) a(3:4)])
loglog([Ddef Ddef], a(3:4), 'r:')

lDin2 = log10(Din2);
w = max(log10(deltaD))-log10(deltaD); % weight for ponderated mean
w = max(deltaD)-deltaD % weight for ponderated mean
w = 1./deltaD % weight for ponderated mean
Doptim_all = 10^(sum(lDin2.*w)/sum(w)); % optim = find(deltaD==min(deltaD),1);

subplot(212), hold on
% % % loglog([Doptim(nf) Doptim(nf)], a(3:4), 'g:')
subplot(211), hold on
str = sprintf('Optimum: D_{in}=%3.2g pxl^2/frame',Doptim_all);
text(.1,.9,str,'Units','normalized')
% a = axis;
% % % loglog([Doptim_all Doptim_all], a(3:4), 'g:')

savefile = 'DinDout_all_files';
cd(output_dir)
saveas(gcf, savefile, 'fig')
saveas(gcf, savefile, 'png')

%%%